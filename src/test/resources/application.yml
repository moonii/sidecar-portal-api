spring:
  application:
    name: container-platform-api
  freemarker:
    template-loader-path: classpath:/templates/

jwt:
  secret: cp-secret
  expirationDateInMs: 3600000

project:
  name: container-platform-api
  artifactId: container-platform-api
  description: API of the Container Platform Projects

management:
  security:
    #Actuator endpoint(health,info..)의 인증여부
    enabled: false

cpNamespace:
  ignoreNamespace: kubernetes-dashboard, kube-node-lease, kube-public, kube-system, default, cp-temp-namespace
  defaultNamespace: temp-namespace         #k-paas-container-platform-temp-namespace
  role:
    init: cp-init-role
    admin: cp-admin-role
  resourceQuotas:
    low: cp-low-resourcequota
    medium: cp-medium-resourcequota
    high: cp-high-resourcequota
  limitRanges:
    low: cp-low-limitrange
    medium: cp-medium-limitrange
    high: cp-high-limitrange

cpMaster:
  api:
    url: TEST-ONLY.DUMMY.COM:6443
    list:
      services:
        list: "/api/v1/namespaces/{namespace}/services"
        get: "/api/v1/namespaces/{namespace}/services/{name}"
        create: "/api/v1/namespaces/{namespace}/services"
        delete: "/api/v1/namespaces/{namespace}/services/{name}"
        update: "/api/v1/namespaces/{namespace}/services/{name}"
        listAllNamespaces: "/api/v1/services"
      endpoints:
        list: "/api/v1/namespaces/{namespace}/endpoints"
        get: "/api/v1/namespaces/{namespace}/endpoints/{name}"
        listAllNamespaces: "/api/v1/endpoints"
      pods:
        list: "/api/v1/namespaces/{namespace}/pods"
        get: "/api/v1/namespaces/{namespace}/pods/{name}"
        create: "/api/v1/namespaces/{namespace}/pods"
        delete: "/api/v1/namespaces/{namespace}/pods/{name}"
        update: "/api/v1/namespaces/{namespace}/pods/{name}"
        listAllNamespaces: "/api/v1/pods"
      nodes:
        list: "/api/v1/nodes"
        get: "/api/v1/nodes/{name}"
      replicaSets:
        list: "/apis/apps/v1/namespaces/{namespace}/replicasets"
        get: "/apis/apps/v1/namespaces/{namespace}/replicasets/{name}"
        create: "/apis/apps/v1/namespaces/{namespace}/replicasets"
        delete: "/apis/apps/v1/namespaces/{namespace}/replicasets/{name}"
        update: "/apis/apps/v1/namespaces/{namespace}/replicasets/{name}"
        listAllNamespaces: "/apis/apps/v1/replicasets"
      persistentVolumes:
        list: "/api/v1/persistentvolumes"
        get: "/api/v1/persistentvolumes/{name}"
        create: "/api/v1/persistentvolumes"
        delete: "/api/v1/persistentvolumes/{name}"
        update: "/api/v1/persistentvolumes/{name}"
        listAllNamespaces: "/api/v1/persistentvolumes"
      persistentVolumeClaims:
        list: "/api/v1/namespaces/{namespace}/persistentvolumeclaims"
        get: "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}"
        create: "/api/v1/namespaces/{namespace}/persistentvolumeclaims"
        delete: "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}"
        update: "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}"
        listAllNamespaces: "/api/v1/persistentvolumeclaims"
      storageClasses:
        list: "/apis/storage.k8s.io/v1beta1/storageclasses"
        get: "/apis/storage.k8s.io/v1beta1/storageclasses/{name}"
        create: "/apis/storage.k8s.io/v1beta1/storageclasses"
        delete: "/apis/storage.k8s.io/v1beta1/storageclasses/{name}"
        update: "/apis/storage.k8s.io/v1beta1/storageclasses/{name}"
      events:
        list: "/api/v1/namespaces/{namespace}/events"
        get: "/api/v1/namespaces/{namespace}/events/{name}"
        listAllNamespaces: "/api/v1/events"
      roles:
        list: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles"
        get: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}"
        create: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles"
        delete: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}"
        update: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/roles/{name}"
        listAllNamespaces: "/apis/rbac.authorization.k8s.io/v1/roles"
      deployments:
        list: "/apis/apps/v1/namespaces/{namespace}/deployments"
        get: "/apis/apps/v1/namespaces/{namespace}/deployments/{name}"
        create: "/apis/apps/v1/namespaces/{namespace}/deployments"
        delete: "/apis/apps/v1/namespaces/{namespace}/deployments/{name}"
        update: "/apis/apps/v1/namespaces/{namespace}/deployments/{name}"
        listAllNamespaces: "/apis/apps/v1/deployments"
      roleBindings:
        list: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings"
        get: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}"
        create: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings"
        delete: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}"
        update: "/apis/rbac.authorization.k8s.io/v1/namespaces/{namespace}/rolebindings/{name}"
        listAllNamespaces: "/apis/rbac.authorization.k8s.io/v1/rolebindings"
      users:
        get: "/api/v1/namespaces/{namespace}/serviceaccounts/{name}"
        create: "/api/v1/namespaces/{namespace}/serviceaccounts"
        delete: "/api/v1/namespaces/{namespace}/serviceaccounts/{name}"
      namespaces:
        list: "/api/v1/namespaces"
        get: "/api/v1/namespaces/{namespace}"
        create: "/api/v1/namespaces"
        delete: "/api/v1/namespaces/{name}"
        update: "/api/v1/namespaces/{name}"
      resourceQuotas:
        list: "/api/v1/namespaces/{namespace}/resourcequotas"
        get: "/api/v1/namespaces/{namespace}/resourcequotas/{name}"
        create: "/api/v1/namespaces/{namespace}/resourcequotas"
        delete: "/api/v1/namespaces/{namespace}/resourcequotas/{name}"
        update: "/api/v1/namespaces/{namespace}/resourcequotas/{name}"
        listAllNamespaces: "/api/v1/resourcequotas"
      secrets:
        get: "/api/v1/namespaces/{namespace}/secrets/{name}"
        create: "/api/v1/namespaces/{namespace}/secrets"
      clusterRoleBindings:
        create: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings"
        delete: "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/{name}"
      limitRanges:
        list: "/api/v1/namespaces/{namespace}/limitranges"
        get: "/api/v1/namespaces/{namespace}/limitranges/{name}"
        create: "/api/v1/namespaces/{namespace}/limitranges"
        delete: "/api/v1/namespaces/{namespace}/limitranges/{name}"
        update: "/api/v1/namespaces/{namespace}/limitranges/{name}"
        listAllNamespaces: "/api/v1/limitranges"
---
spring:
  profiles:
    active: local

logging:
  level:
    ROOT: INFO
  file:
    path: classpath:logback-spring.xml

server:
  port: ${PORT:3333}
  auth:
    valid: N

commonApi:
  url: http://localhost:3334
  authorization:
    id: admin
    password: cpcommon!123

---
spring:
  profiles: dev

logging:
  level:
    ROOT: INFO
  file:
    path: classpath:logback-spring.xml

server:
  port: ${PORT:3333}
  auth:
    valid: N

commonApi:
  url: http://common-api-deployment.default.svc.cluster.local:3334
  authorization:
    id: admin
    password: cpcommon!123
